// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: grpc/nifi/nifi.proto

package nifi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FlowFileReply_ResponseCode int32

const (
	FlowFileReply_ERROR   FlowFileReply_ResponseCode = 0
	FlowFileReply_SUCCESS FlowFileReply_ResponseCode = 1
	FlowFileReply_RETRY   FlowFileReply_ResponseCode = 2
)

// Enum value maps for FlowFileReply_ResponseCode.
var (
	FlowFileReply_ResponseCode_name = map[int32]string{
		0: "ERROR",
		1: "SUCCESS",
		2: "RETRY",
	}
	FlowFileReply_ResponseCode_value = map[string]int32{
		"ERROR":   0,
		"SUCCESS": 1,
		"RETRY":   2,
	}
)

func (x FlowFileReply_ResponseCode) Enum() *FlowFileReply_ResponseCode {
	p := new(FlowFileReply_ResponseCode)
	*p = x
	return p
}

func (x FlowFileReply_ResponseCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlowFileReply_ResponseCode) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_nifi_nifi_proto_enumTypes[0].Descriptor()
}

func (FlowFileReply_ResponseCode) Type() protoreflect.EnumType {
	return &file_grpc_nifi_nifi_proto_enumTypes[0]
}

func (x FlowFileReply_ResponseCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlowFileReply_ResponseCode.Descriptor instead.
func (FlowFileReply_ResponseCode) EnumDescriptor() ([]byte, []int) {
	return file_grpc_nifi_nifi_proto_rawDescGZIP(), []int{1, 0}
}

// The request message
type FlowFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// tags 1-15 require one byte to encode and should be left for commonly occurring tags.
	// For that reason, tags 3-14 are left available.
	//
	// source: https://developers.google.com/protocol-buffers/docs/proto3#assigning-tags
	Id         int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Attributes map[string]string `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Content    []byte            `protobuf:"bytes,15,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *FlowFileRequest) Reset() {
	*x = FlowFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_nifi_nifi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowFileRequest) ProtoMessage() {}

func (x *FlowFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_nifi_nifi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowFileRequest.ProtoReflect.Descriptor instead.
func (*FlowFileRequest) Descriptor() ([]byte, []int) {
	return file_grpc_nifi_nifi_proto_rawDescGZIP(), []int{0}
}

func (x *FlowFileRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlowFileRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *FlowFileRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// the reply message
type FlowFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode FlowFileReply_ResponseCode `protobuf:"varint,1,opt,name=responseCode,proto3,enum=org.apache.nifi.processors.grpc.FlowFileReply_ResponseCode" json:"responseCode,omitempty"`
	Body         string                     `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *FlowFileReply) Reset() {
	*x = FlowFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_nifi_nifi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowFileReply) ProtoMessage() {}

func (x *FlowFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_nifi_nifi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowFileReply.ProtoReflect.Descriptor instead.
func (*FlowFileReply) Descriptor() ([]byte, []int) {
	return file_grpc_nifi_nifi_proto_rawDescGZIP(), []int{1}
}

func (x *FlowFileReply) GetResponseCode() FlowFileReply_ResponseCode {
	if x != nil {
		return x.ResponseCode
	}
	return FlowFileReply_ERROR
}

func (x *FlowFileReply) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

var File_grpc_nifi_nifi_proto protoreflect.FileDescriptor

var file_grpc_nifi_nifi_proto_rawDesc = []byte{
	0x0a, 0x14, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x69, 0x66, 0x69, 0x2f, 0x6e, 0x69, 0x66, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63,
	0x68, 0x65, 0x2e, 0x6e, 0x69, 0x66, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x22, 0xdc, 0x01, 0x0a, 0x0f, 0x46, 0x6c, 0x6f, 0x77,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x60, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x6e, 0x69, 0x66,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb7, 0x01, 0x0a, 0x0d, 0x46, 0x6c, 0x6f, 0x77, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5f, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x6e, 0x69, 0x66, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x31, 0x0a,
	0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x54, 0x52, 0x59, 0x10, 0x02,
	0x32, 0x7d, 0x0a, 0x0f, 0x46, 0x6c, 0x6f, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x30, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x6e, 0x69, 0x66, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x6c,
	0x6f, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x6e, 0x69, 0x66, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x46, 0x6c, 0x6f, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42,
	0x0b, 0x5a, 0x09, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x69, 0x66, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_nifi_nifi_proto_rawDescOnce sync.Once
	file_grpc_nifi_nifi_proto_rawDescData = file_grpc_nifi_nifi_proto_rawDesc
)

func file_grpc_nifi_nifi_proto_rawDescGZIP() []byte {
	file_grpc_nifi_nifi_proto_rawDescOnce.Do(func() {
		file_grpc_nifi_nifi_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_nifi_nifi_proto_rawDescData)
	})
	return file_grpc_nifi_nifi_proto_rawDescData
}

var file_grpc_nifi_nifi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_grpc_nifi_nifi_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_grpc_nifi_nifi_proto_goTypes = []interface{}{
	(FlowFileReply_ResponseCode)(0), // 0: org.apache.nifi.processors.grpc.FlowFileReply.ResponseCode
	(*FlowFileRequest)(nil),         // 1: org.apache.nifi.processors.grpc.FlowFileRequest
	(*FlowFileReply)(nil),           // 2: org.apache.nifi.processors.grpc.FlowFileReply
	nil,                             // 3: org.apache.nifi.processors.grpc.FlowFileRequest.AttributesEntry
}
var file_grpc_nifi_nifi_proto_depIdxs = []int32{
	3, // 0: org.apache.nifi.processors.grpc.FlowFileRequest.attributes:type_name -> org.apache.nifi.processors.grpc.FlowFileRequest.AttributesEntry
	0, // 1: org.apache.nifi.processors.grpc.FlowFileReply.responseCode:type_name -> org.apache.nifi.processors.grpc.FlowFileReply.ResponseCode
	1, // 2: org.apache.nifi.processors.grpc.FlowFileService.Send:input_type -> org.apache.nifi.processors.grpc.FlowFileRequest
	2, // 3: org.apache.nifi.processors.grpc.FlowFileService.Send:output_type -> org.apache.nifi.processors.grpc.FlowFileReply
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_grpc_nifi_nifi_proto_init() }
func file_grpc_nifi_nifi_proto_init() {
	if File_grpc_nifi_nifi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_nifi_nifi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_nifi_nifi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_nifi_nifi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_nifi_nifi_proto_goTypes,
		DependencyIndexes: file_grpc_nifi_nifi_proto_depIdxs,
		EnumInfos:         file_grpc_nifi_nifi_proto_enumTypes,
		MessageInfos:      file_grpc_nifi_nifi_proto_msgTypes,
	}.Build()
	File_grpc_nifi_nifi_proto = out.File
	file_grpc_nifi_nifi_proto_rawDesc = nil
	file_grpc_nifi_nifi_proto_goTypes = nil
	file_grpc_nifi_nifi_proto_depIdxs = nil
}
